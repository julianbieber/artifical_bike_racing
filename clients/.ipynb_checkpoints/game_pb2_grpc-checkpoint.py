# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import game_pb2 as game__pb2


class MainServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.health = channel.unary_unary(
                '/game.MainService/health',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                )
        self.getState = channel.unary_unary(
                '/game.MainService/getState',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.PlayerView.FromString,
                )
        self.input = channel.unary_unary(
                '/game.MainService/input',
                request_serializer=game__pb2.InputRequest.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                )
        self.kill = channel.unary_unary(
                '/game.MainService/kill',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                )
        self.getScore = channel.unary_unary(
                '/game.MainService/getScore',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Score.FromString,
                )


class MainServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def input(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def kill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MainServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'health': grpc.unary_unary_rpc_method_handler(
                    servicer.health,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'getState': grpc.unary_unary_rpc_method_handler(
                    servicer.getState,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.PlayerView.SerializeToString,
            ),
            'input': grpc.unary_unary_rpc_method_handler(
                    servicer.input,
                    request_deserializer=game__pb2.InputRequest.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'kill': grpc.unary_unary_rpc_method_handler(
                    servicer.kill,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'getScore': grpc.unary_unary_rpc_method_handler(
                    servicer.getScore,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Score.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.MainService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MainService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.MainService/health',
            game__pb2.Empty.SerializeToString,
            game__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.MainService/getState',
            game__pb2.Empty.SerializeToString,
            game__pb2.PlayerView.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def input(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.MainService/input',
            game__pb2.InputRequest.SerializeToString,
            game__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def kill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.MainService/kill',
            game__pb2.Empty.SerializeToString,
            game__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.MainService/getScore',
            game__pb2.Empty.SerializeToString,
            game__pb2.Score.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
